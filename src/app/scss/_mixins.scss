
@mixin placeholder-style {
    color: white;
    opacity: 0.5 !important;
    font-weight: 300;
    font-size: $font-size;
}


// generic transform
@mixin transform($transforms) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
    @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
    @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
    @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
    @include transform(skew(#{$x}deg, #{$y}deg));
}

@mixin fixed-width ($width) {
    width: $width;
    min-width: $width;
    max-width: $width;
}
//transform origin
@mixin transform-origin ($origin) {
    -moz-transform-origin: $origin;
    -o-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -webkit-transform-origin: $origin;
    transform-origin: $origin;
}

@mixin rotate-forever {
    0%    { @include transform(rotate(0deg)); }
    100%  { @include transform(rotate(360deg)); }
}
@-webkit-keyframes rotate-forever { @include rotate-forever; }
@-moz-keyframes rotate-forever { @include rotate-forever; }
@keyframes rotate-forever { @include rotate-forever; }


@mixin animation-name($name...) {
    -o-animation-name: $name;
    -moz-animation-name: $name;
    -webkit-animation-name: $name;
    animation-name: $name;
}
@mixin animation-duration($duration...) {
    -o-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -webkit-animation-duration: $duration;
    animation-duration: $duration;
}
@mixin animation-duration($duration...) {
    -o-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -webkit-animation-duration: $duration;
    animation-duration: $duration;
}
@mixin animation-timing-function($timing...) {
    -o-animation-timing-function: $timing;
    -moz-animation-timing-function: $timing;
    -webkit-animation-timing-function: $timing;
    animation-timing-function: $timing;
}
@mixin animation-iteration-count($count...) {
    -o-animation-iteration-count: $count;
    -moz-animation-iteration-count: $count;
    -webkit-animation-iteration-count: $count;
    animation-iteration-count: $count;
}
@mixin animation-direction($direction...) {
    -o-animation-direction: $direction;
    -moz-animation-direction: $direction;
    -webkit-animation-direction: $direction;
    animation-direction: $direction;
}
@mixin animation-fill-mode($fill...) {
    -o-animation-fill-mode: $fill;
    -moz-animation-fill-mode: $fill;
    -webkit-animation-fill-mode: $fill;
    animation-fill-mode: $fill;
}
@mixin animation-play-state($state...) {
    -o-animation-play-state: $state;
    -moz-animation-play-state: $state;
    -webkit-animation-play-state: $state;
    animation-play-state: $state;
}
@mixin animation($animation...) {
    -o-animation: $animation;
    -moz-animation: $animation;
    -webkit-animation: $animation;
    animation: $animation;
}

@mixin userselect($param) {
    -webkit-touch-callout: $param;
    -webkit-user-select: $param;
    -moz-user-select: $param;
    user-select: $param;
}
/** Mixins for secondary buttons
* TODO should be removed when all buttons moved to bem styled classes
*/

@mixin buttonSecondary{
    .button-secondary {
        border-style: solid;
        border-width: 1px 0;
        border-color: $color-background-base;
        padding: 0;
        line-height: 60px;
        min-height: 60px;
        & button {
            color: $color-primary;
            width: 100%;
            box-shadow: none !important;
            border-radius: 0;
        }
        & + .button-secondary {
            border-top: none;
        }
    }
}

@mixin buttonSecondaryFirstOfType{
    & .button-secondary:first-of-type{
        margin-top: 10px;
    }
}

@mixin buttonSecondaryLastChild{
    & .button-secondary:last-child{
        border-bottom: 0;
        border-radius: 0 0 10px 10px;
        overflow: hidden;
    }
}


@mixin optional-at-root($sel) {
    @at-root #{if(not &, $sel, selector-append(&, $sel))} {
        @content;
    }
}

@mixin placeholder {
    @include optional-at-root('::-webkit-input-placeholder') {
        @content;
    }

    @include optional-at-root(':-moz-placeholder') {
        @content;
    }

    @include optional-at-root('::-moz-placeholder') {
        @content;
    }

    @include optional-at-root(':-ms-input-placeholder') {
        @content;
    }
}